import datetime
import zoneinfo
from .errors import InvalidTypeError as InvalidTypeError, NaiveDateTimeNotAllowed as NaiveDateTimeNotAllowed, UnknownTimeZone as UnknownTimeZone
from .winzone import IANA_TO_MS_TIMEZONE_MAP as IANA_TO_MS_TIMEZONE_MAP, MS_TIMEZONE_TO_IANA_MAP as MS_TIMEZONE_TO_IANA_MAP
from _typeshed import Incomplete

log: Incomplete

class EWSDate(datetime.date):
    def ewsformat(self): ...
    def __add__(self, other): ...
    def __iadd__(self, other): ...
    def __sub__(self, other): ...
    def __isub__(self, other): ...
    @classmethod
    def fromordinal(cls, n): ...
    @classmethod
    def from_date(cls, d): ...
    @classmethod
    def from_string(cls, date_string): ...

class EWSDateTime(datetime.datetime):
    def __new__(cls, *args, **kwargs): ...
    def ewsformat(self): ...
    @classmethod
    def from_datetime(cls, d): ...
    def astimezone(self, tz: Incomplete | None = None): ...
    @classmethod
    def fromisoformat(cls, date_string): ...
    def __add__(self, other): ...
    def __iadd__(self, other): ...
    def __sub__(self, other): ...
    def __isub__(self, other): ...
    @classmethod
    def from_string(cls, date_string): ...
    @classmethod
    def fromtimestamp(cls, t, tz: Incomplete | None = None): ...
    @classmethod
    def utcfromtimestamp(cls, t): ...
    @classmethod
    def now(cls, tz: Incomplete | None = None): ...
    @classmethod
    def utcnow(cls): ...
    def date(self): ...

class EWSTimeZone(zoneinfo.ZoneInfo):
    IANA_TO_MS_MAP = IANA_TO_MS_TIMEZONE_MAP
    MS_TO_IANA_MAP = MS_TIMEZONE_TO_IANA_MAP
    def __new__(cls, *args, **kwargs): ...
    def __hash__(self): ...
    def __eq__(self, other): ...
    @classmethod
    def from_ms_id(cls, ms_id): ...
    @classmethod
    def from_pytz(cls, tz): ...
    @classmethod
    def from_datetime(cls, tz): ...
    @classmethod
    def from_dateutil(cls, tz): ...
    @classmethod
    def from_zoneinfo(cls, tz): ...
    @classmethod
    def from_timezone(cls, tz): ...
    @classmethod
    def localzone(cls): ...
    def fromutc(self, dt): ...

UTC: Incomplete
UTC_NOW: Incomplete
