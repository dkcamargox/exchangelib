from ..errors import ErrorFolderNotFound as ErrorFolderNotFound, ErrorItemNotFound as ErrorItemNotFound, ErrorNoPublicFolderReplicaAvailable as ErrorNoPublicFolderReplicaAvailable, InvalidTypeError as InvalidTypeError
from ..properties import FolderId as FolderId, InvalidField as InvalidField
from ..queryset import DoesNotExist as DoesNotExist, MultipleObjectsReturned as MultipleObjectsReturned
from ..restriction import Q as Q
from _typeshed import Incomplete

SHALLOW: str
SOFT_DELETED: str
DEEP: str
FOLDER_TRAVERSAL_CHOICES: Incomplete
MISSING_FOLDER_ERRORS: Incomplete
log: Incomplete

class FolderQuerySet:
    folder_collection: Incomplete
    q: Incomplete
    only_fields: Incomplete
    def __init__(self, folder_collection) -> None: ...
    def only(self, *args): ...
    def depth(self, depth): ...
    def get(self, *args, **kwargs): ...
    def all(self): ...
    def filter(self, *args, **kwargs): ...
    def __iter__(self): ...

class SingleFolderQuerySet(FolderQuerySet):
    def __init__(self, account, folder) -> None: ...
    def resolve(self): ...
