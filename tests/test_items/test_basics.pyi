import abc
from ..common import EWSTest as EWSTest, get_random_choice as get_random_choice, get_random_date as get_random_date, get_random_datetime as get_random_datetime, get_random_datetime_range as get_random_datetime_range, get_random_decimal as get_random_decimal, get_random_string as get_random_string, get_random_substring as get_random_substring
from _typeshed import Incomplete

class BaseItemTest(EWSTest, metaclass=abc.ABCMeta):
    TEST_FOLDER: Incomplete
    FOLDER_CLASS: Incomplete
    ITEM_CLASS: Incomplete
    @classmethod
    def setUpClass(cls) -> None: ...
    test_folder: Incomplete
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def get_random_insert_kwargs(self): ...
    def get_item_fields(self): ...
    def get_random_update_kwargs(self, item, insert_kwargs): ...
    def get_test_item(self, categories: Incomplete | None = None, **kwargs): ...
    def get_test_folder(self, folder: Incomplete | None = None): ...
    def get_item_by_id(self, item, folder: Incomplete | None = None): ...
    def safe_save(self, item, **kwargs) -> None: ...
    def safe_cancel(self, item) -> None: ...

class CommonItemTest(BaseItemTest):
    @classmethod
    def setUpClass(cls) -> None: ...
    def test_field_names(self) -> None: ...
    def test_magic(self) -> None: ...
    def test_queryset_nonsearchable_fields(self) -> None: ...
    def test_filter_on_simple_fields(self) -> None: ...
    def test_filter_on_list_fields(self) -> None: ...
    def test_filter_on_single_field_index_fields(self) -> None: ...
    def test_filter_on_multi_field_index_fields(self) -> None: ...
    def test_text_field_settings(self) -> None: ...
    def test_save_and_delete(self) -> None: ...
    def test_item_insert(self) -> None: ...
    def test_item_update(self) -> None: ...
    def test_item_update_wipe(self) -> None: ...
    def test_item_update_extended_properties(self) -> None: ...
